CreateIdentifiedUserRole:
  Type: 'AWS::IAM::Role'
  Properties:
    AssumeRolePolicyDocument:
      Version: '2012-10-17'
      Statement:
        - Effect: Allow
          Principal:
            Service: appsync.amazonaws.com
          Action: 'sts:AssumeRole'
    Policies:
      - PolicyName: CreateIdentifiedUserFunctionAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: 'lambda:InvokeFunction'
              Resource:
                'Fn::ImportValue':
                  'Fn::Sub': >-
                    ${EnvironmentName}${UserServiceStackName}:${EnvironmentName}CreateIdentifiedUserARN
CreateIdentifiedUserDataSource:
  Type: 'AWS::AppSync::DataSource'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    Name:
      'Fn::Sub': '${EnvironmentName}CreateIdentifiedUser'
    Type: AWS_LAMBDA
    LambdaConfig:
      LambdaFunctionArn:
        'Fn::ImportValue':
          'Fn::Sub': >-
            ${EnvironmentName}${UserServiceStackName}:${EnvironmentName}CreateIdentifiedUserARN
    ServiceRoleArn:
      'Fn::GetAtt': CreateIdentifiedUserRole.Arn
CreateIdentifiedUserResolver:
  Type: 'AWS::AppSync::Resolver'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    FieldName: createIdentifiedUser
    TypeName: Mutation
    DataSourceName:
      'Fn::GetAtt': CreateIdentifiedUserDataSource.Name
CreateInternalUserRole:
  Type: 'AWS::IAM::Role'
  Properties:
    AssumeRolePolicyDocument:
      Version: '2012-10-17'
      Statement:
        - Effect: Allow
          Principal:
            Service: appsync.amazonaws.com
          Action: 'sts:AssumeRole'
    Policies:
      - PolicyName: CreateInternalUserFunctionAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: 'lambda:InvokeFunction'
              Resource:
                'Fn::ImportValue':
                  'Fn::Sub': >-
                    ${EnvironmentName}${UserServiceStackName}:${EnvironmentName}CreateInternalUserARN
CreateInternalUserDataSource:
  Type: 'AWS::AppSync::DataSource'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    Name:
      'Fn::Sub': '${EnvironmentName}CreateInternalUser'
    Type: AWS_LAMBDA
    LambdaConfig:
      LambdaFunctionArn:
        'Fn::ImportValue':
          'Fn::Sub': >-
            ${EnvironmentName}${UserServiceStackName}:${EnvironmentName}CreateInternalUserARN
    ServiceRoleArn:
      'Fn::GetAtt': CreateInternalUserRole.Arn
CreateInternalUserResolver:
  Type: 'AWS::AppSync::Resolver'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    FieldName: createInternalUser
    TypeName: Mutation
    DataSourceName:
      'Fn::GetAtt': CreateInternalUserDataSource.Name
CreateOrganizationRole:
  Type: 'AWS::IAM::Role'
  Properties:
    AssumeRolePolicyDocument:
      Version: '2012-10-17'
      Statement:
        - Effect: Allow
          Principal:
            Service: appsync.amazonaws.com
          Action: 'sts:AssumeRole'
    Policies:
      - PolicyName: CreateOrganizationFunctionAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: 'lambda:InvokeFunction'
              Resource:
                'Fn::ImportValue':
                  'Fn::Sub': >-
                    ${EnvironmentName}${UserServiceStackName}:${EnvironmentName}CreateOrganizationARN
CreateOrganizationDataSource:
  Type: 'AWS::AppSync::DataSource'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    Name:
      'Fn::Sub': '${EnvironmentName}CreateOrganization'
    Type: AWS_LAMBDA
    LambdaConfig:
      LambdaFunctionArn:
        'Fn::ImportValue':
          'Fn::Sub': >-
            ${EnvironmentName}${UserServiceStackName}:${EnvironmentName}CreateOrganizationARN
    ServiceRoleArn:
      'Fn::GetAtt': CreateOrganizationRole.Arn
CreateOrganizationResolver:
  Type: 'AWS::AppSync::Resolver'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    FieldName: createOrganization
    TypeName: Mutation
    DataSourceName:
      'Fn::GetAtt': CreateOrganizationDataSource.Name
CreateUnidentifiedUserRole:
  Type: 'AWS::IAM::Role'
  Properties:
    AssumeRolePolicyDocument:
      Version: '2012-10-17'
      Statement:
        - Effect: Allow
          Principal:
            Service: appsync.amazonaws.com
          Action: 'sts:AssumeRole'
    Policies:
      - PolicyName: CreateUnidentifiedUserFunctionAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: 'lambda:InvokeFunction'
              Resource:
                'Fn::ImportValue':
                  'Fn::Sub': >-
                    ${EnvironmentName}${UserServiceStackName}:${EnvironmentName}CreateUnidentifiedUserARN
CreateUnidentifiedUserDataSource:
  Type: 'AWS::AppSync::DataSource'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    Name:
      'Fn::Sub': '${EnvironmentName}CreateUnidentifiedUser'
    Type: AWS_LAMBDA
    LambdaConfig:
      LambdaFunctionArn:
        'Fn::ImportValue':
          'Fn::Sub': >-
            ${EnvironmentName}${UserServiceStackName}:${EnvironmentName}CreateUnidentifiedUserARN
    ServiceRoleArn:
      'Fn::GetAtt': CreateUnidentifiedUserRole.Arn
CreateUnidentifiedUserResolver:
  Type: 'AWS::AppSync::Resolver'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    FieldName: createUnidentifiedUser
    TypeName: Mutation
    DataSourceName:
      'Fn::GetAtt': CreateUnidentifiedUserDataSource.Name
UpdateIdentifiedUserRole:
  Type: 'AWS::IAM::Role'
  Properties:
    AssumeRolePolicyDocument:
      Version: '2012-10-17'
      Statement:
        - Effect: Allow
          Principal:
            Service: appsync.amazonaws.com
          Action: 'sts:AssumeRole'
    Policies:
      - PolicyName: UpdateIdentifiedUserFunctionAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: 'lambda:InvokeFunction'
              Resource:
                'Fn::ImportValue':
                  'Fn::Sub': >-
                    ${EnvironmentName}${UserServiceStackName}:${EnvironmentName}UpdateIdentifiedUserARN
UpdateIdentifiedUserDataSource:
  Type: 'AWS::AppSync::DataSource'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    Name:
      'Fn::Sub': '${EnvironmentName}UpdateIdentifiedUser'
    Type: AWS_LAMBDA
    LambdaConfig:
      LambdaFunctionArn:
        'Fn::ImportValue':
          'Fn::Sub': >-
            ${EnvironmentName}${UserServiceStackName}:${EnvironmentName}UpdateIdentifiedUserARN
    ServiceRoleArn:
      'Fn::GetAtt': UpdateIdentifiedUserRole.Arn
UpdateIdentifiedUserResolver:
  Type: 'AWS::AppSync::Resolver'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    FieldName: updateIdentifiedUser
    TypeName: Mutation
    DataSourceName:
      'Fn::GetAtt': UpdateIdentifiedUserDataSource.Name
UpdateInternalUserRole:
  Type: 'AWS::IAM::Role'
  Properties:
    AssumeRolePolicyDocument:
      Version: '2012-10-17'
      Statement:
        - Effect: Allow
          Principal:
            Service: appsync.amazonaws.com
          Action: 'sts:AssumeRole'
    Policies:
      - PolicyName: UpdateInternalUserFunctionAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: 'lambda:InvokeFunction'
              Resource:
                'Fn::ImportValue':
                  'Fn::Sub': >-
                    ${EnvironmentName}${UserServiceStackName}:${EnvironmentName}UpdateInternalUserARN
UpdateInternalUserDataSource:
  Type: 'AWS::AppSync::DataSource'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    Name:
      'Fn::Sub': '${EnvironmentName}UpdateInternalUser'
    Type: AWS_LAMBDA
    LambdaConfig:
      LambdaFunctionArn:
        'Fn::ImportValue':
          'Fn::Sub': >-
            ${EnvironmentName}${UserServiceStackName}:${EnvironmentName}UpdateInternalUserARN
    ServiceRoleArn:
      'Fn::GetAtt': UpdateInternalUserRole.Arn
UpdateInternalUserResolver:
  Type: 'AWS::AppSync::Resolver'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    FieldName: updateInternalUser
    TypeName: Mutation
    DataSourceName:
      'Fn::GetAtt': UpdateInternalUserDataSource.Name
UpdateOrganizationRole:
  Type: 'AWS::IAM::Role'
  Properties:
    AssumeRolePolicyDocument:
      Version: '2012-10-17'
      Statement:
        - Effect: Allow
          Principal:
            Service: appsync.amazonaws.com
          Action: 'sts:AssumeRole'
    Policies:
      - PolicyName: UpdateOrganizationFunctionAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: 'lambda:InvokeFunction'
              Resource:
                'Fn::ImportValue':
                  'Fn::Sub': >-
                    ${EnvironmentName}${UserServiceStackName}:${EnvironmentName}UpdateOrganizationARN
UpdateOrganizationDataSource:
  Type: 'AWS::AppSync::DataSource'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    Name:
      'Fn::Sub': '${EnvironmentName}UpdateOrganization'
    Type: AWS_LAMBDA
    LambdaConfig:
      LambdaFunctionArn:
        'Fn::ImportValue':
          'Fn::Sub': >-
            ${EnvironmentName}${UserServiceStackName}:${EnvironmentName}UpdateOrganizationARN
    ServiceRoleArn:
      'Fn::GetAtt': UpdateOrganizationRole.Arn
UpdateOrganizationResolver:
  Type: 'AWS::AppSync::Resolver'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    FieldName: updateOrganization
    TypeName: Mutation
    DataSourceName:
      'Fn::GetAtt': UpdateOrganizationDataSource.Name
UpdateUnidentifiedUserRole:
  Type: 'AWS::IAM::Role'
  Properties:
    AssumeRolePolicyDocument:
      Version: '2012-10-17'
      Statement:
        - Effect: Allow
          Principal:
            Service: appsync.amazonaws.com
          Action: 'sts:AssumeRole'
    Policies:
      - PolicyName: UpdateUnidentifiedUserFunctionAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: 'lambda:InvokeFunction'
              Resource:
                'Fn::ImportValue':
                  'Fn::Sub': >-
                    ${EnvironmentName}${UserServiceStackName}:${EnvironmentName}UpdateUnidentifiedUserARN
UpdateUnidentifiedUserDataSource:
  Type: 'AWS::AppSync::DataSource'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    Name:
      'Fn::Sub': '${EnvironmentName}UpdateUnidentifiedUser'
    Type: AWS_LAMBDA
    LambdaConfig:
      LambdaFunctionArn:
        'Fn::ImportValue':
          'Fn::Sub': >-
            ${EnvironmentName}${UserServiceStackName}:${EnvironmentName}UpdateUnidentifiedUserARN
    ServiceRoleArn:
      'Fn::GetAtt': UpdateUnidentifiedUserRole.Arn
UpdateUnidentifiedUserResolver:
  Type: 'AWS::AppSync::Resolver'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    FieldName: updateUnidentifiedUser
    TypeName: Mutation
    DataSourceName:
      'Fn::GetAtt': UpdateUnidentifiedUserDataSource.Name
GetCountriesRole:
  Type: 'AWS::IAM::Role'
  Properties:
    AssumeRolePolicyDocument:
      Version: '2012-10-17'
      Statement:
        - Effect: Allow
          Principal:
            Service: appsync.amazonaws.com
          Action: 'sts:AssumeRole'
    Policies:
      - PolicyName: GetCountriesFunctionAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: 'lambda:InvokeFunction'
              Resource:
                'Fn::ImportValue':
                  'Fn::Sub': >-
                    ${EnvironmentName}${UserServiceStackName}:${EnvironmentName}GetCountriesARN
GetCountriesDataSource:
  Type: 'AWS::AppSync::DataSource'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    Name:
      'Fn::Sub': '${EnvironmentName}GetCountries'
    Type: AWS_LAMBDA
    LambdaConfig:
      LambdaFunctionArn:
        'Fn::ImportValue':
          'Fn::Sub': >-
            ${EnvironmentName}${UserServiceStackName}:${EnvironmentName}GetCountriesARN
    ServiceRoleArn:
      'Fn::GetAtt': GetCountriesRole.Arn
GetCountriesResolver:
  Type: 'AWS::AppSync::Resolver'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    FieldName: getCountries
    TypeName: Query
    DataSourceName:
      'Fn::GetAtt': GetCountriesDataSource.Name
GetGendersRole:
  Type: 'AWS::IAM::Role'
  Properties:
    AssumeRolePolicyDocument:
      Version: '2012-10-17'
      Statement:
        - Effect: Allow
          Principal:
            Service: appsync.amazonaws.com
          Action: 'sts:AssumeRole'
    Policies:
      - PolicyName: GetGendersFunctionAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: 'lambda:InvokeFunction'
              Resource:
                'Fn::ImportValue':
                  'Fn::Sub': >-
                    ${EnvironmentName}${UserServiceStackName}:${EnvironmentName}GetGendersARN
GetGendersDataSource:
  Type: 'AWS::AppSync::DataSource'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    Name:
      'Fn::Sub': '${EnvironmentName}GetGenders'
    Type: AWS_LAMBDA
    LambdaConfig:
      LambdaFunctionArn:
        'Fn::ImportValue':
          'Fn::Sub': >-
            ${EnvironmentName}${UserServiceStackName}:${EnvironmentName}GetGendersARN
    ServiceRoleArn:
      'Fn::GetAtt': GetGendersRole.Arn
GetGendersResolver:
  Type: 'AWS::AppSync::Resolver'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    FieldName: getGenders
    TypeName: Query
    DataSourceName:
      'Fn::GetAtt': GetGendersDataSource.Name
GetInternalUserRole:
  Type: 'AWS::IAM::Role'
  Properties:
    AssumeRolePolicyDocument:
      Version: '2012-10-17'
      Statement:
        - Effect: Allow
          Principal:
            Service: appsync.amazonaws.com
          Action: 'sts:AssumeRole'
    Policies:
      - PolicyName: GetInternalUserFunctionAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: 'lambda:InvokeFunction'
              Resource:
                'Fn::ImportValue':
                  'Fn::Sub': >-
                    ${EnvironmentName}${UserServiceStackName}:${EnvironmentName}GetInternalUserARN
GetInternalUserDataSource:
  Type: 'AWS::AppSync::DataSource'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    Name:
      'Fn::Sub': '${EnvironmentName}GetInternalUser'
    Type: AWS_LAMBDA
    LambdaConfig:
      LambdaFunctionArn:
        'Fn::ImportValue':
          'Fn::Sub': >-
            ${EnvironmentName}${UserServiceStackName}:${EnvironmentName}GetInternalUserARN
    ServiceRoleArn:
      'Fn::GetAtt': GetInternalUserRole.Arn
GetInternalUserResolver:
  Type: 'AWS::AppSync::Resolver'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    FieldName: getInternalUser
    TypeName: Query
    DataSourceName:
      'Fn::GetAtt': GetInternalUserDataSource.Name
GetInternalUsersRole:
  Type: 'AWS::IAM::Role'
  Properties:
    AssumeRolePolicyDocument:
      Version: '2012-10-17'
      Statement:
        - Effect: Allow
          Principal:
            Service: appsync.amazonaws.com
          Action: 'sts:AssumeRole'
    Policies:
      - PolicyName: GetInternalUsersFunctionAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: 'lambda:InvokeFunction'
              Resource:
                'Fn::ImportValue':
                  'Fn::Sub': >-
                    ${EnvironmentName}${UserServiceStackName}:${EnvironmentName}GetInternalUsersARN
GetInternalUsersDataSource:
  Type: 'AWS::AppSync::DataSource'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    Name:
      'Fn::Sub': '${EnvironmentName}GetInternalUsers'
    Type: AWS_LAMBDA
    LambdaConfig:
      LambdaFunctionArn:
        'Fn::ImportValue':
          'Fn::Sub': >-
            ${EnvironmentName}${UserServiceStackName}:${EnvironmentName}GetInternalUsersARN
    ServiceRoleArn:
      'Fn::GetAtt': GetInternalUsersRole.Arn
GetInternalUsersResolver:
  Type: 'AWS::AppSync::Resolver'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    FieldName: getInternalUsers
    TypeName: Query
    DataSourceName:
      'Fn::GetAtt': GetInternalUsersDataSource.Name
GetRolesRole:
  Type: 'AWS::IAM::Role'
  Properties:
    AssumeRolePolicyDocument:
      Version: '2012-10-17'
      Statement:
        - Effect: Allow
          Principal:
            Service: appsync.amazonaws.com
          Action: 'sts:AssumeRole'
    Policies:
      - PolicyName: GetRolesFunctionAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: 'lambda:InvokeFunction'
              Resource:
                'Fn::ImportValue':
                  'Fn::Sub': >-
                    ${EnvironmentName}${UserServiceStackName}:${EnvironmentName}GetRolesARN
GetRolesDataSource:
  Type: 'AWS::AppSync::DataSource'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    Name:
      'Fn::Sub': '${EnvironmentName}GetRoles'
    Type: AWS_LAMBDA
    LambdaConfig:
      LambdaFunctionArn:
        'Fn::ImportValue':
          'Fn::Sub': >-
            ${EnvironmentName}${UserServiceStackName}:${EnvironmentName}GetRolesARN
    ServiceRoleArn:
      'Fn::GetAtt': GetRolesRole.Arn
GetRolesResolver:
  Type: 'AWS::AppSync::Resolver'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    FieldName: getRoles
    TypeName: Query
    DataSourceName:
      'Fn::GetAtt': GetRolesDataSource.Name
GetClientRole:
  Type: 'AWS::IAM::Role'
  Properties:
    AssumeRolePolicyDocument:
      Version: '2012-10-17'
      Statement:
        - Effect: Allow
          Principal:
            Service: appsync.amazonaws.com
          Action: 'sts:AssumeRole'
    Policies:
      - PolicyName: GetClientFunctionAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: 'lambda:InvokeFunction'
              Resource:
                'Fn::ImportValue':
                  'Fn::Sub': >-
                    ${EnvironmentName}${UserServiceStackName}:${EnvironmentName}GetClientARN
GetClientDataSource:
  Type: 'AWS::AppSync::DataSource'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    Name:
      'Fn::Sub': '${EnvironmentName}GetClient'
    Type: AWS_LAMBDA
    LambdaConfig:
      LambdaFunctionArn:
        'Fn::ImportValue':
          'Fn::Sub': >-
            ${EnvironmentName}${UserServiceStackName}:${EnvironmentName}GetClientARN
    ServiceRoleArn:
      'Fn::GetAtt': GetClientRole.Arn
GetClientResolver:
  Type: 'AWS::AppSync::Resolver'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    FieldName: getClient
    TypeName: Query
    DataSourceName:
      'Fn::GetAtt': GetClientDataSource.Name
GetClientsRole:
  Type: 'AWS::IAM::Role'
  Properties:
    AssumeRolePolicyDocument:
      Version: '2012-10-17'
      Statement:
        - Effect: Allow
          Principal:
            Service: appsync.amazonaws.com
          Action: 'sts:AssumeRole'
    Policies:
      - PolicyName: GetClientsFunctionAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: 'lambda:InvokeFunction'
              Resource:
                'Fn::ImportValue':
                  'Fn::Sub': >-
                    ${EnvironmentName}${UserServiceStackName}:${EnvironmentName}GetClientsARN
GetClientsDataSource:
  Type: 'AWS::AppSync::DataSource'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    Name:
      'Fn::Sub': '${EnvironmentName}GetClients'
    Type: AWS_LAMBDA
    LambdaConfig:
      LambdaFunctionArn:
        'Fn::ImportValue':
          'Fn::Sub': >-
            ${EnvironmentName}${UserServiceStackName}:${EnvironmentName}GetClientsARN
    ServiceRoleArn:
      'Fn::GetAtt': GetClientsRole.Arn
GetClientsResolver:
  Type: 'AWS::AppSync::Resolver'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    FieldName: getClients
    TypeName: Query
    DataSourceName:
      'Fn::GetAtt': GetClientsDataSource.Name
RequalifyClientRole:
  Type: 'AWS::IAM::Role'
  Properties:
    AssumeRolePolicyDocument:
      Version: '2012-10-17'
      Statement:
        - Effect: Allow
          Principal:
            Service: appsync.amazonaws.com
          Action: 'sts:AssumeRole'
    Policies:
      - PolicyName: RequalifyClientFunctionAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: 'lambda:InvokeFunction'
              Resource:
                'Fn::ImportValue':
                  'Fn::Sub': >-
                    ${EnvironmentName}${UserServiceStackName}:${EnvironmentName}RequalifyClientARN
RequalifyClientDataSource:
  Type: 'AWS::AppSync::DataSource'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    Name:
      'Fn::Sub': '${EnvironmentName}RequalifyClient'
    Type: AWS_LAMBDA
    LambdaConfig:
      LambdaFunctionArn:
        'Fn::ImportValue':
          'Fn::Sub': >-
            ${EnvironmentName}${UserServiceStackName}:${EnvironmentName}RequalifyClientARN
    ServiceRoleArn:
      'Fn::GetAtt': RequalifyClientRole.Arn
RequalifyClientResolver:
  Type: 'AWS::AppSync::Resolver'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    FieldName: requalifyClient
    TypeName: Mutation
    DataSourceName:
      'Fn::GetAtt': RequalifyClientDataSource.Name
DeleteClientsRole:
  Type: 'AWS::IAM::Role'
  Properties:
    AssumeRolePolicyDocument:
      Version: '2012-10-17'
      Statement:
        - Effect: Allow
          Principal:
            Service: appsync.amazonaws.com
          Action: 'sts:AssumeRole'
    Policies:
      - PolicyName: DeleteClientsFunctionAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: 'lambda:InvokeFunction'
              Resource:
                'Fn::ImportValue':
                  'Fn::Sub': >-
                    ${EnvironmentName}${UserServiceStackName}:${EnvironmentName}DeleteClientsARN
DeleteClientsDataSource:
  Type: 'AWS::AppSync::DataSource'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    Name:
      'Fn::Sub': '${EnvironmentName}DeleteClients'
    Type: AWS_LAMBDA
    LambdaConfig:
      LambdaFunctionArn:
        'Fn::ImportValue':
          'Fn::Sub': >-
            ${EnvironmentName}${UserServiceStackName}:${EnvironmentName}DeleteClientsARN
    ServiceRoleArn:
      'Fn::GetAtt': DeleteClientsRole.Arn
DeleteClientsResolver:
  Type: 'AWS::AppSync::Resolver'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    FieldName: deleteClients
    TypeName: Mutation
    DataSourceName:
      'Fn::GetAtt': DeleteClientsDataSource.Name
DeleteInternalUsersRole:
  Type: 'AWS::IAM::Role'
  Properties:
    AssumeRolePolicyDocument:
      Version: '2012-10-17'
      Statement:
        - Effect: Allow
          Principal:
            Service: appsync.amazonaws.com
          Action: 'sts:AssumeRole'
    Policies:
      - PolicyName: DeleteInternalUsersFunctionAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: 'lambda:InvokeFunction'
              Resource:
                'Fn::ImportValue':
                  'Fn::Sub': >-
                    ${EnvironmentName}${UserServiceStackName}:${EnvironmentName}DeleteInternalUsersARN
DeleteInternalUsersDataSource:
  Type: 'AWS::AppSync::DataSource'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    Name:
      'Fn::Sub': '${EnvironmentName}DeleteInternalUsers'
    Type: AWS_LAMBDA
    LambdaConfig:
      LambdaFunctionArn:
        'Fn::ImportValue':
          'Fn::Sub': >-
            ${EnvironmentName}${UserServiceStackName}:${EnvironmentName}DeleteInternalUsersARN
    ServiceRoleArn:
      'Fn::GetAtt': DeleteInternalUsersRole.Arn
DeleteInternalUsersResolver:
  Type: 'AWS::AppSync::Resolver'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    FieldName: deleteInternalUsers
    TypeName: Mutation
    DataSourceName:
      'Fn::GetAtt': DeleteInternalUsersDataSource.Name
GetDeletedInternalUsersRole:
  Type: 'AWS::IAM::Role'
  Properties:
    AssumeRolePolicyDocument:
      Version: '2012-10-17'
      Statement:
        - Effect: Allow
          Principal:
            Service: appsync.amazonaws.com
          Action: 'sts:AssumeRole'
    Policies:
      - PolicyName: GetDeletedInternalUsersFunctionAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: 'lambda:InvokeFunction'
              Resource:
                'Fn::ImportValue':
                  'Fn::Sub': >-
                    ${EnvironmentName}${UserServiceStackName}:${EnvironmentName}GetDeletedInternalUsersARN
GetDeletedInternalUsersDataSource:
  Type: 'AWS::AppSync::DataSource'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    Name:
      'Fn::Sub': '${EnvironmentName}GetDeletedInternalUsers'
    Type: AWS_LAMBDA
    LambdaConfig:
      LambdaFunctionArn:
        'Fn::ImportValue':
          'Fn::Sub': >-
            ${EnvironmentName}${UserServiceStackName}:${EnvironmentName}GetDeletedInternalUsersARN
    ServiceRoleArn:
      'Fn::GetAtt': GetDeletedInternalUsersRole.Arn
GetDeletedInternalUsersResolver:
  Type: 'AWS::AppSync::Resolver'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    FieldName: getDeletedInternalUsers
    TypeName: Query
    DataSourceName:
      'Fn::GetAtt': GetDeletedInternalUsersDataSource.Name
RestoreDeletedInternalUsersRole:
  Type: 'AWS::IAM::Role'
  Properties:
    AssumeRolePolicyDocument:
      Version: '2012-10-17'
      Statement:
        - Effect: Allow
          Principal:
            Service: appsync.amazonaws.com
          Action: 'sts:AssumeRole'
    Policies:
      - PolicyName: RestoreDeletedInternalUsersFunctionAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: 'lambda:InvokeFunction'
              Resource:
                'Fn::ImportValue':
                  'Fn::Sub': >-
                    ${EnvironmentName}${UserServiceStackName}:${EnvironmentName}RestoreDeletedInternalUsersARN
RestoreDeletedInternalUsersDataSource:
  Type: 'AWS::AppSync::DataSource'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    Name:
      'Fn::Sub': '${EnvironmentName}RestoreDeletedInternalUsers'
    Type: AWS_LAMBDA
    LambdaConfig:
      LambdaFunctionArn:
        'Fn::ImportValue':
          'Fn::Sub': >-
            ${EnvironmentName}${UserServiceStackName}:${EnvironmentName}RestoreDeletedInternalUsersARN
    ServiceRoleArn:
      'Fn::GetAtt': RestoreDeletedInternalUsersRole.Arn
RestoreDeletedInternalUsersResolver:
  Type: 'AWS::AppSync::Resolver'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    FieldName: restoreDeletedInternalUsers
    TypeName: Mutation
    DataSourceName:
      'Fn::GetAtt': RestoreDeletedInternalUsersDataSource.Name
