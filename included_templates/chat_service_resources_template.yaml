CreateChatRoomMessageRole:
  Type: 'AWS::IAM::Role'
  Properties:
    AssumeRolePolicyDocument:
      Version: '2012-10-17'
      Statement:
        - Effect: Allow
          Principal:
            Service: appsync.amazonaws.com
          Action: 'sts:AssumeRole'
    Policies:
      - PolicyName: CreateChatRoomMessageFunctionAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: 'lambda:InvokeFunction'
              Resource:
                'Fn::ImportValue':
                  'Fn::Sub': >-
                    ${EnvironmentName}${ChatServiceStackName}:${EnvironmentName}CreateChatRoomMessageARN
CreateChatRoomMessageDataSource:
  Type: 'AWS::AppSync::DataSource'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    Name:
      'Fn::Sub': '${EnvironmentName}CreateChatRoomMessage'
    Type: AWS_LAMBDA
    LambdaConfig:
      LambdaFunctionArn:
        'Fn::ImportValue':
          'Fn::Sub': >-
            ${EnvironmentName}${ChatServiceStackName}:${EnvironmentName}CreateChatRoomMessageARN
    ServiceRoleArn:
      'Fn::GetAtt': CreateChatRoomMessageRole.Arn
CreateChatRoomMessageResolver:
  Type: 'AWS::AppSync::Resolver'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    FieldName: createChatRoomMessage
    TypeName: Mutation
    DataSourceName:
      'Fn::GetAtt': CreateChatRoomMessageDataSource.Name
CreateChatRoomRole:
  Type: 'AWS::IAM::Role'
  Properties:
    AssumeRolePolicyDocument:
      Version: '2012-10-17'
      Statement:
        - Effect: Allow
          Principal:
            Service: appsync.amazonaws.com
          Action: 'sts:AssumeRole'
    Policies:
      - PolicyName: CreateChatRoomFunctionAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: 'lambda:InvokeFunction'
              Resource:
                'Fn::ImportValue':
                  'Fn::Sub': >-
                    ${EnvironmentName}${ChatServiceStackName}:${EnvironmentName}CreateChatRoomARN
CreateChatRoomDataSource:
  Type: 'AWS::AppSync::DataSource'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    Name:
      'Fn::Sub': '${EnvironmentName}CreateChatRoom'
    Type: AWS_LAMBDA
    LambdaConfig:
      LambdaFunctionArn:
        'Fn::ImportValue':
          'Fn::Sub': >-
            ${EnvironmentName}${ChatServiceStackName}:${EnvironmentName}CreateChatRoomARN
    ServiceRoleArn:
      'Fn::GetAtt': CreateChatRoomRole.Arn
CreateChatRoomResolver:
  Type: 'AWS::AppSync::Resolver'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    FieldName: createChatRoom
    TypeName: Mutation
    DataSourceName:
      'Fn::GetAtt': CreateChatRoomDataSource.Name
AssignChatRoomOperatorRole:
  Type: 'AWS::IAM::Role'
  Properties:
    AssumeRolePolicyDocument:
      Version: '2012-10-17'
      Statement:
        - Effect: Allow
          Principal:
            Service: appsync.amazonaws.com
          Action: 'sts:AssumeRole'
    Policies:
      - PolicyName: AssignChatRoomOperatorFunctionAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: 'lambda:InvokeFunction'
              Resource:
                'Fn::ImportValue':
                  'Fn::Sub': >-
                    ${EnvironmentName}${ChatServiceStackName}:${EnvironmentName}AssignChatRoomOperatorARN
AssignChatRoomOperatorDataSource:
  Type: 'AWS::AppSync::DataSource'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    Name:
      'Fn::Sub': '${EnvironmentName}AssignChatRoomOperator'
    Type: AWS_LAMBDA
    LambdaConfig:
      LambdaFunctionArn:
        'Fn::ImportValue':
          'Fn::Sub': >-
            ${EnvironmentName}${ChatServiceStackName}:${EnvironmentName}AssignChatRoomOperatorARN
    ServiceRoleArn:
      'Fn::GetAtt': AssignChatRoomOperatorRole.Arn
AssignChatRoomOperatorResolver:
  Type: 'AWS::AppSync::Resolver'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    FieldName: assignChatRoomOperator
    TypeName: Mutation
    DataSourceName:
      'Fn::GetAtt': AssignChatRoomOperatorDataSource.Name
CloseChatRoomRole:
  Type: 'AWS::IAM::Role'
  Properties:
    AssumeRolePolicyDocument:
      Version: '2012-10-17'
      Statement:
        - Effect: Allow
          Principal:
            Service: appsync.amazonaws.com
          Action: 'sts:AssumeRole'
    Policies:
      - PolicyName: CloseChatRoomFunctionAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: 'lambda:InvokeFunction'
              Resource:
                'Fn::ImportValue':
                  'Fn::Sub': >-
                    ${EnvironmentName}${ChatServiceStackName}:${EnvironmentName}CloseChatRoomARN
CloseChatRoomDataSource:
  Type: 'AWS::AppSync::DataSource'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    Name:
      'Fn::Sub': '${EnvironmentName}CloseChatRoom'
    Type: AWS_LAMBDA
    LambdaConfig:
      LambdaFunctionArn:
        'Fn::ImportValue':
          'Fn::Sub': >-
            ${EnvironmentName}${ChatServiceStackName}:${EnvironmentName}CloseChatRoomARN
    ServiceRoleArn:
      'Fn::GetAtt': CloseChatRoomRole.Arn
CloseChatRoomResolver:
  Type: 'AWS::AppSync::Resolver'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    FieldName: closeChatRoom
    TypeName: Mutation
    DataSourceName:
      'Fn::GetAtt': CloseChatRoomDataSource.Name
ActivateClosedChatRoomRole:
  Type: 'AWS::IAM::Role'
  Properties:
    AssumeRolePolicyDocument:
      Version: '2012-10-17'
      Statement:
        - Effect: Allow
          Principal:
            Service: appsync.amazonaws.com
          Action: 'sts:AssumeRole'
    Policies:
      - PolicyName: ActivateClosedChatRoomFunctionAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: 'lambda:InvokeFunction'
              Resource:
                'Fn::ImportValue':
                  'Fn::Sub': >-
                    ${EnvironmentName}${ChatServiceStackName}:${EnvironmentName}ActivateClosedChatRoomARN
ActivateClosedChatRoomDataSource:
  Type: 'AWS::AppSync::DataSource'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    Name:
      'Fn::Sub': '${EnvironmentName}ActivateClosedChatRoom'
    Type: AWS_LAMBDA
    LambdaConfig:
      LambdaFunctionArn:
        'Fn::ImportValue':
          'Fn::Sub': >-
            ${EnvironmentName}${ChatServiceStackName}:${EnvironmentName}ActivateClosedChatRoomARN
    ServiceRoleArn:
      'Fn::GetAtt': ActivateClosedChatRoomRole.Arn
ActivateClosedChatRoomResolver:
  Type: 'AWS::AppSync::Resolver'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    FieldName: activateClosedChatRoom
    TypeName: Mutation
    DataSourceName:
      'Fn::GetAtt': ActivateClosedChatRoomDataSource.Name
UpdateMessageSendingStatusRole:
  Type: 'AWS::IAM::Role'
  Properties:
    AssumeRolePolicyDocument:
      Version: '2012-10-17'
      Statement:
        - Effect: Allow
          Principal:
            Service: appsync.amazonaws.com
          Action: 'sts:AssumeRole'
    Policies:
      - PolicyName: UpdateMessageSendingStatusFunctionAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: 'lambda:InvokeFunction'
              Resource:
                'Fn::ImportValue':
                  'Fn::Sub': >-
                    ${EnvironmentName}${ChatServiceStackName}:${EnvironmentName}UpdateMessageSendingStatusARN
UpdateMessageSendingStatusDataSource:
  Type: 'AWS::AppSync::DataSource'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    Name:
      'Fn::Sub': '${EnvironmentName}UpdateMessageSendingStatus'
    Type: AWS_LAMBDA
    LambdaConfig:
      LambdaFunctionArn:
        'Fn::ImportValue':
          'Fn::Sub': >-
            ${EnvironmentName}${ChatServiceStackName}:${EnvironmentName}UpdateMessageSendingStatusARN
    ServiceRoleArn:
      'Fn::GetAtt': UpdateMessageSendingStatusRole.Arn
UpdateMessageSendingStatusResolver:
  Type: 'AWS::AppSync::Resolver'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    FieldName: updateMessageSendingStatus
    TypeName: Mutation
    DataSourceName:
      'Fn::GetAtt': UpdateMessageSendingStatusDataSource.Name
UpdateMessageStatusRole:
  Type: 'AWS::IAM::Role'
  Properties:
    AssumeRolePolicyDocument:
      Version: '2012-10-17'
      Statement:
        - Effect: Allow
          Principal:
            Service: appsync.amazonaws.com
          Action: 'sts:AssumeRole'
    Policies:
      - PolicyName: UpdateMessageStatusFunctionAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: 'lambda:InvokeFunction'
              Resource:
                'Fn::ImportValue':
                  'Fn::Sub': >-
                    ${EnvironmentName}${ChatServiceStackName}:${EnvironmentName}UpdateMessageStatusARN
UpdateMessageStatusDataSource:
  Type: 'AWS::AppSync::DataSource'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    Name:
      'Fn::Sub': '${EnvironmentName}UpdateMessageStatus'
    Type: AWS_LAMBDA
    LambdaConfig:
      LambdaFunctionArn:
        'Fn::ImportValue':
          'Fn::Sub': >-
            ${EnvironmentName}${ChatServiceStackName}:${EnvironmentName}UpdateMessageStatusARN
    ServiceRoleArn:
      'Fn::GetAtt': UpdateMessageStatusRole.Arn
UpdateMessageStatusResolver:
  Type: 'AWS::AppSync::Resolver'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    FieldName: updateMessageStatus
    TypeName: Mutation
    DataSourceName:
      'Fn::GetAtt': UpdateMessageStatusDataSource.Name
GetChatRoomMessagesRole:
  Type: 'AWS::IAM::Role'
  Properties:
    AssumeRolePolicyDocument:
      Version: '2012-10-17'
      Statement:
        - Effect: Allow
          Principal:
            Service: appsync.amazonaws.com
          Action: 'sts:AssumeRole'
    Policies:
      - PolicyName: GetChatRoomMessagesFunctionAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: 'lambda:InvokeFunction'
              Resource:
                'Fn::ImportValue':
                  'Fn::Sub': >-
                    ${EnvironmentName}${ChatServiceStackName}:${EnvironmentName}GetChatRoomMessagesARN
GetChatRoomMessagesDataSource:
  Type: 'AWS::AppSync::DataSource'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    Name:
      'Fn::Sub': '${EnvironmentName}GetChatRoomMessages'
    Type: AWS_LAMBDA
    LambdaConfig:
      LambdaFunctionArn:
        'Fn::ImportValue':
          'Fn::Sub': >-
            ${EnvironmentName}${ChatServiceStackName}:${EnvironmentName}GetChatRoomMessagesARN
    ServiceRoleArn:
      'Fn::GetAtt': GetChatRoomMessagesRole.Arn
GetChatRoomMessagesResolver:
  Type: 'AWS::AppSync::Resolver'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    FieldName: getChatRoomMessages
    TypeName: Query
    DataSourceName:
      'Fn::GetAtt': GetChatRoomMessagesDataSource.Name
GetChannelsTypesAndChannelsRole:
  Type: 'AWS::IAM::Role'
  Properties:
    AssumeRolePolicyDocument:
      Version: '2012-10-17'
      Statement:
        - Effect: Allow
          Principal:
            Service: appsync.amazonaws.com
          Action: 'sts:AssumeRole'
    Policies:
      - PolicyName: GetChannelsTypesAndChannelsFunctionAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: 'lambda:InvokeFunction'
              Resource:
                'Fn::ImportValue':
                  'Fn::Sub': >-
                    ${EnvironmentName}${ChatServiceStackName}:${EnvironmentName}GetChannelsTypesAndChannelsARN
GetChannelsTypesAndChannelsDataSource:
  Type: 'AWS::AppSync::DataSource'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    Name:
      'Fn::Sub': '${EnvironmentName}GetChannelsTypesAndChannels'
    Type: AWS_LAMBDA
    LambdaConfig:
      LambdaFunctionArn:
        'Fn::ImportValue':
          'Fn::Sub': >-
            ${EnvironmentName}${ChatServiceStackName}:${EnvironmentName}GetChannelsTypesAndChannelsARN
    ServiceRoleArn:
      'Fn::GetAtt': GetChannelsTypesAndChannelsRole.Arn
GetChannelsTypesAndChannelsResolver:
  Type: 'AWS::AppSync::Resolver'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    FieldName: getChannelsTypesAndChannels
    TypeName: Query
    DataSourceName:
      'Fn::GetAtt': GetChannelsTypesAndChannelsDataSource.Name
GetChatRoomInformationRole:
  Type: 'AWS::IAM::Role'
  Properties:
    AssumeRolePolicyDocument:
      Version: '2012-10-17'
      Statement:
        - Effect: Allow
          Principal:
            Service: appsync.amazonaws.com
          Action: 'sts:AssumeRole'
    Policies:
      - PolicyName: GetChatRoomInformationFunctionAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: 'lambda:InvokeFunction'
              Resource:
                'Fn::ImportValue':
                  'Fn::Sub': >-
                    ${EnvironmentName}${ChatServiceStackName}:${EnvironmentName}GetChatRoomInformationARN
GetChatRoomInformationDataSource:
  Type: 'AWS::AppSync::DataSource'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    Name:
      'Fn::Sub': '${EnvironmentName}GetChatRoomInformation'
    Type: AWS_LAMBDA
    LambdaConfig:
      LambdaFunctionArn:
        'Fn::ImportValue':
          'Fn::Sub': >-
            ${EnvironmentName}${ChatServiceStackName}:${EnvironmentName}GetChatRoomInformationARN
    ServiceRoleArn:
      'Fn::GetAtt': GetChatRoomInformationRole.Arn
GetChatRoomInformationResolver:
  Type: 'AWS::AppSync::Resolver'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    FieldName: getChatRoomInformation
    TypeName: Query
    DataSourceName:
      'Fn::GetAtt': GetChatRoomInformationDataSource.Name
GetNonAcceptedChatRoomsRole:
  Type: 'AWS::IAM::Role'
  Properties:
    AssumeRolePolicyDocument:
      Version: '2012-10-17'
      Statement:
        - Effect: Allow
          Principal:
            Service: appsync.amazonaws.com
          Action: 'sts:AssumeRole'
    Policies:
      - PolicyName: GetNonAcceptedChatRoomsFunctionAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: 'lambda:InvokeFunction'
              Resource:
                'Fn::ImportValue':
                  'Fn::Sub': >-
                    ${EnvironmentName}${ChatServiceStackName}:${EnvironmentName}GetNonAcceptedChatRoomsARN
GetNonAcceptedChatRoomsDataSource:
  Type: 'AWS::AppSync::DataSource'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    Name:
      'Fn::Sub': '${EnvironmentName}GetNonAcceptedChatRooms'
    Type: AWS_LAMBDA
    LambdaConfig:
      LambdaFunctionArn:
        'Fn::ImportValue':
          'Fn::Sub': >-
            ${EnvironmentName}${ChatServiceStackName}:${EnvironmentName}GetNonAcceptedChatRoomsARN
    ServiceRoleArn:
      'Fn::GetAtt': GetNonAcceptedChatRoomsRole.Arn
GetNonAcceptedChatRoomsResolver:
  Type: 'AWS::AppSync::Resolver'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    FieldName: getNonAcceptedChatRooms
    TypeName: Query
    DataSourceName:
      'Fn::GetAtt': GetNonAcceptedChatRoomsDataSource.Name
GetAcceptedChatRoomsRole:
  Type: 'AWS::IAM::Role'
  Properties:
    AssumeRolePolicyDocument:
      Version: '2012-10-17'
      Statement:
        - Effect: Allow
          Principal:
            Service: appsync.amazonaws.com
          Action: 'sts:AssumeRole'
    Policies:
      - PolicyName: GetAcceptedChatRoomsFunctionAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: 'lambda:InvokeFunction'
              Resource:
                'Fn::ImportValue':
                  'Fn::Sub': >-
                    ${EnvironmentName}${ChatServiceStackName}:${EnvironmentName}GetAcceptedChatRoomsARN
GetAcceptedChatRoomsDataSource:
  Type: 'AWS::AppSync::DataSource'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    Name:
      'Fn::Sub': '${EnvironmentName}GetAcceptedChatRooms'
    Type: AWS_LAMBDA
    LambdaConfig:
      LambdaFunctionArn:
        'Fn::ImportValue':
          'Fn::Sub': >-
            ${EnvironmentName}${ChatServiceStackName}:${EnvironmentName}GetAcceptedChatRoomsARN
    ServiceRoleArn:
      'Fn::GetAtt': GetAcceptedChatRoomsRole.Arn
GetAcceptedChatRoomsResolver:
  Type: 'AWS::AppSync::Resolver'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    FieldName: getAcceptedChatRooms
    TypeName: Query
    DataSourceName:
      'Fn::GetAtt': GetAcceptedChatRoomsDataSource.Name
GetCompletedChatRoomsRole:
  Type: 'AWS::IAM::Role'
  Properties:
    AssumeRolePolicyDocument:
      Version: '2012-10-17'
      Statement:
        - Effect: Allow
          Principal:
            Service: appsync.amazonaws.com
          Action: 'sts:AssumeRole'
    Policies:
      - PolicyName: GetCompletedChatRoomsFunctionAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: 'lambda:InvokeFunction'
              Resource:
                'Fn::ImportValue':
                  'Fn::Sub': >-
                    ${EnvironmentName}${ChatServiceStackName}:${EnvironmentName}GetCompletedChatRoomsARN
GetCompletedChatRoomsDataSource:
  Type: 'AWS::AppSync::DataSource'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    Name:
      'Fn::Sub': '${EnvironmentName}GetCompletedChatRooms'
    Type: AWS_LAMBDA
    LambdaConfig:
      LambdaFunctionArn:
        'Fn::ImportValue':
          'Fn::Sub': >-
            ${EnvironmentName}${ChatServiceStackName}:${EnvironmentName}GetCompletedChatRoomsARN
    ServiceRoleArn:
      'Fn::GetAtt': GetCompletedChatRoomsRole.Arn
GetCompletedChatRoomsResolver:
  Type: 'AWS::AppSync::Resolver'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    FieldName: getCompletedChatRooms
    TypeName: Query
    DataSourceName:
      'Fn::GetAtt': GetCompletedChatRoomsDataSource.Name
GetChannelOnlineOperatorsRole:
  Type: 'AWS::IAM::Role'
  Properties:
    AssumeRolePolicyDocument:
      Version: '2012-10-17'
      Statement:
        - Effect: Allow
          Principal:
            Service: appsync.amazonaws.com
          Action: 'sts:AssumeRole'
    Policies:
      - PolicyName: GetChannelOnlineOperatorsFunctionAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: 'lambda:InvokeFunction'
              Resource:
                'Fn::ImportValue':
                  'Fn::Sub': >-
                    ${EnvironmentName}${ChatServiceStackName}:${EnvironmentName}GetChannelOnlineOperatorsARN
GetChannelOnlineOperatorsDataSource:
  Type: 'AWS::AppSync::DataSource'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    Name:
      'Fn::Sub': '${EnvironmentName}GetChannelOnlineOperators'
    Type: AWS_LAMBDA
    LambdaConfig:
      LambdaFunctionArn:
        'Fn::ImportValue':
          'Fn::Sub': >-
            ${EnvironmentName}${ChatServiceStackName}:${EnvironmentName}GetChannelOnlineOperatorsARN
    ServiceRoleArn:
      'Fn::GetAtt': GetChannelOnlineOperatorsRole.Arn
GetChannelOnlineOperatorsResolver:
  Type: 'AWS::AppSync::Resolver'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    FieldName: getChannelOnlineOperators
    TypeName: Query
    DataSourceName:
      'Fn::GetAtt': GetChannelOnlineOperatorsDataSource.Name
GetClientChatRoomsRole:
  Type: 'AWS::IAM::Role'
  Properties:
    AssumeRolePolicyDocument:
      Version: '2012-10-17'
      Statement:
        - Effect: Allow
          Principal:
            Service: appsync.amazonaws.com
          Action: 'sts:AssumeRole'
    Policies:
      - PolicyName: GetClientChatRoomsFunctionAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: 'lambda:InvokeFunction'
              Resource:
                'Fn::ImportValue':
                  'Fn::Sub': >-
                    ${EnvironmentName}${ChatServiceStackName}:${EnvironmentName}GetClientChatRoomsARN
GetClientChatRoomsDataSource:
  Type: 'AWS::AppSync::DataSource'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    Name:
      'Fn::Sub': '${EnvironmentName}GetClientChatRooms'
    Type: AWS_LAMBDA
    LambdaConfig:
      LambdaFunctionArn:
        'Fn::ImportValue':
          'Fn::Sub': >-
            ${EnvironmentName}${ChatServiceStackName}:${EnvironmentName}GetClientChatRoomsARN
    ServiceRoleArn:
      'Fn::GetAtt': GetClientChatRoomsRole.Arn
GetClientChatRoomsResolver:
  Type: 'AWS::AppSync::Resolver'
  Properties:
    ApiId:
      'Fn::GetAtt': GraphQLApi.ApiId
    FieldName: getClientChatRooms
    TypeName: Query
    DataSourceName:
      'Fn::GetAtt': GetClientChatRoomsDataSource.Name
