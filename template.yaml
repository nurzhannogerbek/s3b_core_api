AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Parameters:
  EnvironmentName:
    Type: String
  ChatServiceStackName:
    Type: String
    Default: 3beepChatService
  UserServiceStackName:
    Type: String
    Default: 3beepUserService
  SettingsServiceStackName:
    Type: String
    Default: 3beepSettingsService
  S3Bucket:
    Type: String
  Auth0Domain:
    Type: String
  Auth0ClientID:
    Type: String
  GraphQLSchemaFileName:
    Type: String
  ApiKeyExpires:
    Type: Number
Conditions:
  IsProductionEnvironment:
    'Fn::Equals':
      - Ref: EnvironmentName
      - Prod
Resources:
  CoreApiRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: CoreApiPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: '*'
                Resource: '*'
  GraphQLApi:
    Type: 'AWS::AppSync::GraphQLApi'
    Properties:
      Name:
        'Fn::Sub': '${EnvironmentName}3beepCoreApi'
      AuthenticationType: OPENID_CONNECT
      OpenIDConnectConfig:
        Issuer:
          'Fn::Sub': '${Auth0Domain}'
        ClientId:
          'Fn::Sub': '${Auth0ClientID}'
      AdditionalAuthenticationProviders:
        - AuthenticationType: API_KEY
      LogConfig:
        CloudWatchLogsRoleArn:
          'Fn::GetAtt': CoreApiRole.Arn
        ExcludeVerboseContent: false
        FieldLogLevel:
          'Fn::If':
            - IsProductionEnvironment
            - ERROR
            - ALL
      XrayEnabled: false
  GraphQLSchema:
    Type: 'AWS::AppSync::GraphQLSchema'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      DefinitionS3Location:
        'Fn::Sub': 's3://${S3Bucket}/${GraphQLSchemaFileName}'
  ApiKey:
    Type: 'AWS::AppSync::ApiKey'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Expires:
        Ref: ApiKeyExpires

  CreateChatRoomMessageDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}CreateChatRoomMessage'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ChatServiceStackName}:${EnvironmentName}CreateChatRoomMessageARN
      ServiceRoleArn:
        'Fn::GetAtt': CoreApiRole.Arn
  CreateChatRoomMessageResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: createChatRoomMessage
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': CreateChatRoomMessageDataSource.Name
  CreateChatRoomDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}CreateChatRoom'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ChatServiceStackName}:${EnvironmentName}CreateChatRoomARN
      ServiceRoleArn:
        'Fn::GetAtt': CoreApiRole.Arn
  CreateChatRoomResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: createChatRoom
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': CreateChatRoomDataSource.Name
  AssignChatRoomOperatorDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}AssignChatRoomOperator'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ChatServiceStackName}:${EnvironmentName}AssignChatRoomOperatorARN
      ServiceRoleArn:
        'Fn::GetAtt': CoreApiRole.Arn
  AssignChatRoomOperatorResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: assignChatRoomOperator
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': AssignChatRoomOperatorDataSource.Name
  CloseChatRoomDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}CloseChatRoom'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ChatServiceStackName}:${EnvironmentName}CloseChatRoomARN
      ServiceRoleArn:
        'Fn::GetAtt': CoreApiRole.Arn
  CloseChatRoomResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: closeChatRoom
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': CloseChatRoomDataSource.Name
  ActivateClosedChatRoomDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}ActivateClosedChatRoom'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ChatServiceStackName}:${EnvironmentName}ActivateClosedChatRoomARN
      ServiceRoleArn:
        'Fn::GetAtt': CoreApiRole.Arn
  ActivateClosedChatRoomResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: activateClosedChatRoom
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': ActivateClosedChatRoomDataSource.Name
  UpdateMessageSendingStatusDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}UpdateMessageSendingStatus'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ChatServiceStackName}:${EnvironmentName}UpdateMessageSendingStatusARN
      ServiceRoleArn:
        'Fn::GetAtt': CoreApiRole.Arn
  UpdateMessageSendingStatusResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: updateMessageSendingStatus
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': UpdateMessageSendingStatusDataSource.Name
  CreateIdentifiedUserDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}CreateIdentifiedUser'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${UserServiceStackName}:${EnvironmentName}CreateIdentifiedUserARN
      ServiceRoleArn:
        'Fn::GetAtt': CoreApiRole.Arn
  CreateIdentifiedUserResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: createIdentifiedUser
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': CreateIdentifiedUserDataSource.Name
  CreateInternalUserDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}CreateInternalUser'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${UserServiceStackName}:${EnvironmentName}CreateInternalUserARN
      ServiceRoleArn:
        'Fn::GetAtt': CoreApiRole.Arn
  CreateInternalUserResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: createInternalUser
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': CreateInternalUserDataSource.Name
  CreateUnidentifiedUserDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}CreateUnidentifiedUser'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${UserServiceStackName}:${EnvironmentName}CreateUnidentifiedUserARN
      ServiceRoleArn:
        'Fn::GetAtt': CoreApiRole.Arn
  CreateUnidentifiedUserResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: createUnidentifiedUser
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': CreateUnidentifiedUserDataSource.Name
  UpdateIdentifiedUserDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}UpdateIdentifiedUser'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${UserServiceStackName}:${EnvironmentName}UpdateIdentifiedUserARN
      ServiceRoleArn:
        'Fn::GetAtt': CoreApiRole.Arn
  UpdateIdentifiedUserResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: updateIdentifiedUser
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': UpdateIdentifiedUserDataSource.Name
  UpdateInternalUserDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}UpdateInternalUser'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${UserServiceStackName}:${EnvironmentName}UpdateInternalUserARN
      ServiceRoleArn:
        'Fn::GetAtt': CoreApiRole.Arn
  UpdateInternalUserResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: updateInternalUser
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': UpdateInternalUserDataSource.Name
  UpdateUnidentifiedUserDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}UpdateUnidentifiedUser'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${UserServiceStackName}:${EnvironmentName}UpdateUnidentifiedUserARN
      ServiceRoleArn:
        'Fn::GetAtt': CoreApiRole.Arn
  UpdateUnidentifiedUserResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: updateUnidentifiedUser
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': UpdateUnidentifiedUserDataSource.Name
  GetChatRoomMessagesDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetChatRoomMessages'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ChatServiceStackName}:${EnvironmentName}GetChatRoomMessagesARN
      ServiceRoleArn:
        'Fn::GetAtt': CoreApiRole.Arn
  GetChatRoomMessagesResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getChatRoomMessages
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetChatRoomMessagesDataSource.Name
  GetChannelsTypesAndChannelsDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetChannelsTypesAndChannels'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ChatServiceStackName}:${EnvironmentName}GetChannelsTypesAndChannelsARN
      ServiceRoleArn:
        'Fn::GetAtt': CoreApiRole.Arn
  GetChannelsTypesAndChannelsResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getChannelsTypesAndChannels
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetChannelsTypesAndChannelsDataSource.Name
  GetChatRoomInformationDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetChatRoomInformation'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ChatServiceStackName}:${EnvironmentName}GetChatRoomInformationARN
      ServiceRoleArn:
        'Fn::GetAtt': CoreApiRole.Arn
  GetChatRoomInformationResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getChatRoomInformation
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetChatRoomInformationDataSource.Name
  GetNonAcceptedChatRoomsDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetNonAcceptedChatRooms'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ChatServiceStackName}:${EnvironmentName}GetNonAcceptedChatRoomsARN
      ServiceRoleArn:
        'Fn::GetAtt': CoreApiRole.Arn
  GetNonAcceptedChatRoomsResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getNonAcceptedChatRooms
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetNonAcceptedChatRoomsDataSource.Name
  GetAcceptedChatRoomsDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetAcceptedChatRooms'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ChatServiceStackName}:${EnvironmentName}GetAcceptedChatRoomsARN
      ServiceRoleArn:
        'Fn::GetAtt': CoreApiRole.Arn
  GetAcceptedChatRoomsResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getAcceptedChatRooms
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetAcceptedChatRoomsDataSource.Name
  GetCompletedChatRoomsDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetCompletedChatRooms'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ChatServiceStackName}:${EnvironmentName}GetCompletedChatRoomsARN
      ServiceRoleArn:
        'Fn::GetAtt': CoreApiRole.Arn
  GetCompletedChatRoomsResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getCompletedChatRooms
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetCompletedChatRoomsDataSource.Name
  GetInternalUserDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetInternalUser'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${UserServiceStackName}:${EnvironmentName}GetInternalUserARN
      ServiceRoleArn:
        'Fn::GetAtt': CoreApiRole.Arn
  GetInternalUserResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getInternalUser
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetInternalUserDataSource.Name
  GetInternalUsersDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetInternalUsers'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${UserServiceStackName}:${EnvironmentName}GetInternalUsersARN
      ServiceRoleArn:
        'Fn::GetAtt': CoreApiRole.Arn
  GetInternalUsersResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getInternalUsers
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetInternalUsersDataSource.Name
  GetRolesDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetRoles'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${UserServiceStackName}:${EnvironmentName}GetRolesARN
      ServiceRoleArn:
        'Fn::GetAtt': CoreApiRole.Arn
  GetRolesResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getRoles
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetRolesDataSource.Name
  GetClientDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetClient'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${UserServiceStackName}:${EnvironmentName}GetClientARN
      ServiceRoleArn:
        'Fn::GetAtt': CoreApiRole.Arn
  GetClientResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getClient
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetClientDataSource.Name
  GetChannelOnlineOperatorsDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetChannelOnlineOperators'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ChatServiceStackName}:${EnvironmentName}GetChannelOnlineOperatorsARN
      ServiceRoleArn:
        'Fn::GetAtt': CoreApiRole.Arn
  GetChannelOnlineOperatorsResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getChannelOnlineOperators
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetChannelOnlineOperatorsDataSource.Name
  GetClientChatRoomsDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetClientChatRooms'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ChatServiceStackName}:${EnvironmentName}GetClientChatRoomsARN
      ServiceRoleArn:
        'Fn::GetAtt': CoreApiRole.Arn
  GetClientChatRoomsResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getClientChatRooms
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetClientChatRoomsDataSource.Name
  GetClientsDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetClients'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${UserServiceStackName}:${EnvironmentName}GetClientsARN
      ServiceRoleArn:
        'Fn::GetAtt': CoreApiRole.Arn
  GetClientsResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getClients
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetClientsDataSource.Name
  RequalifyClientDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}RequalifyClient'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${UserServiceStackName}:${EnvironmentName}RequalifyClientARN
      ServiceRoleArn:
        'Fn::GetAtt': CoreApiRole.Arn
  RequalifyClientResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: requalifyClient
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': RequalifyClientDataSource.Name
  DeleteClientsDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}DeleteClients'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${UserServiceStackName}:${EnvironmentName}DeleteClientsARN
      ServiceRoleArn:
        'Fn::GetAtt': CoreApiRole.Arn
  DeleteClientsResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: deleteClients
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': DeleteClientsDataSource.Name
  DeleteInternalUsersDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}DeleteInternalUsers'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${UserServiceStackName}:${EnvironmentName}DeleteInternalUsersARN
      ServiceRoleArn:
        'Fn::GetAtt': CoreApiRole.Arn
  DeleteInternalUsersResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: deleteInternalUsers
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': DeleteInternalUsersDataSource.Name
  GetDeletedInternalUsersDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetDeletedInternalUsers'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${UserServiceStackName}:${EnvironmentName}GetDeletedInternalUsersARN
      ServiceRoleArn:
        'Fn::GetAtt': CoreApiRole.Arn
  GetDeletedInternalUsersResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getDeletedInternalUsers
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetDeletedInternalUsersDataSource.Name
  RestoreDeletedInternalUsersDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}RestoreDeletedInternalUsers'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${UserServiceStackName}:${EnvironmentName}RestoreDeletedInternalUsersARN
      ServiceRoleArn:
        'Fn::GetAtt': CoreApiRole.Arn
  RestoreDeletedInternalUsersResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: restoreDeletedInternalUsers
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': RestoreDeletedInternalUsersDataSource.Name
  UpdateMessageDataDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}UpdateMessageData'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ChatServiceStackName}:${EnvironmentName}UpdateMessageDataARN
      ServiceRoleArn:
        'Fn::GetAtt': CoreApiRole.Arn
  UpdateMessageDataResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: updateMessageData
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': UpdateMessageDataDataSource.Name